---
import type { KnownLanguageCode } from "../../i18n";
import { LANGUAGE_CODES, LANGUAGES } from "../../i18n";
import { SITE } from "../../site";

type Props = {
    langCode: KnownLanguageCode;
};

const { langCode: activeLangCode } = Astro.props;
---

<div class="language-select-wrapper">
    <svg
        class="language"
        aria-hidden="true"
        focusable="false"
        role="img"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 88.6 77.3"
    >
        <path
            fill="currentColor"
            d="M61,24.6h7.9l18.7,51.6h-7.7l-5.4-15.5H54.3l-5.6,15.5h-7.2L61,24.6z M72.6,55l-8-22.8L56.3,55H72.6z"
        ></path>
        <path
            fill="currentColor"
            d="M53.6,60.6c-10-4-16-9-22-14c0,0,1.3,1.3,0,0c-6,5-20,13-20,13l-4-6c8-5,10-6,19-13c-2.1-1.9-12-13-13-19h8          c4,9,10,14,10,14c10-8,10-19,10-19h8c0,0-1,13-12,24l0,0c5,5,10,9,19,13L53.6,60.6z M1.6,16.6h56v-8h-23v-7h-9v7h-24V16.6z"
        ></path>
    </svg>
    <select class="language-select">
        {
            LANGUAGE_CODES.filter(
                (langCode) =>
                    langCode in SITE && !(SITE[langCode].disabled ?? false)
            ).map((langCode) => {
                const language = LANGUAGES[langCode];
                const selected = activeLangCode === langCode;
                return (
                    <option value={langCode} selected={selected}>
                        {language.name[langCode]}
                    </option>
                );
            })
        }
    </select>
    <svg
        class="dropdown"
        aria-hidden="true"
        focusable="false"
        role="img"
        fill="currentColor"
        version="1.1"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 330.00 330.00"
    >
        <path
            d="M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393 c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393 s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z"
        >
        </path>
    </svg>
</div>

<script>
    import { PATTERN_LANGUAGE_CODE } from "../../i18n";
    const selectLanguage: HTMLSelectElement | null = document.querySelector(
        "select.language-select"
    );
    selectLanguage?.addEventListener("change", ({ target }) => {
        const newLangCode = (target as HTMLSelectElement)?.value;
        window.location.pathname = window.location.pathname.replace(
            PATTERN_LANGUAGE_CODE,
            newLangCode
        );
    });
</script>

<style>
    .language-select {
        flex-grow: 1;
        box-sizing: border-box;
        margin: 0;
        padding: 0.125em 2em;
        overflow: visible;
        font-weight: 500;
        font-size: 1rem;
        font-family: inherit;
        line-height: inherit;
        background-color: var(--theme-bg);
        border-color: var(--theme-text-lighter);
        color: var(--theme-text-light);
        border-style: solid;
        border-width: 1px;
        border-radius: 0.25rem;
        outline: 0;
        cursor: pointer;
        transition: all 0.5s ease-out;
        -webkit-font-smoothing: antialiased;
        appearance: none;
        width: 100%;
    }
    .language-select-wrapper .language-select:hover,
    .language-select-wrapper .language-select:focus {
        color: var(--theme-text);
        border-color: var(--theme-text-light);
    }
    .language-select-wrapper {
        display: flex;
        flex-direction: row;
        align-items: center;
        color: var(--theme-text-light);
        position: relative;
        transition: all 0.5s ease-out;
    }
    .language-select-wrapper > svg {
        background-color: var(--theme-bg);
        margin: 0 0.5em;
        width: 1.25em;
        height: 1.25em;
        pointer-events: none;
        position: absolute;
        z-index: 9999;
    }

    .language-select-wrapper svg.dropdown {
        height: 0.75em;
        width: 0.75em;
    }

    .dropdown {
        position: absolute;
        right: 0;
    }

    @media (max-width: 1440px) {
        .language-select {
            width: 0;
        }

        .language-select {
            color: transparent;
            padding: 0.125em 1.0625em;
        }

        .language-select-wrapper svg.dropdown {
            display: none;
        }
    }
</style>
