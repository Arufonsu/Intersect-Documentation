---
import { CollectionEntry, getCollection } from "astro:content";
import MainLayout from "../layouts/MainLayout.astro";
import { getLangCode } from "../i18n";

export async function getStaticPaths() {
	const docs = await getCollection("docs");

	function transform(entry: CollectionEntry<"docs">) {
		const slugParts = entry.slug.split("/");
		const langCode = getLangCode(entry.id);
		const [version] = entry.id
			.split("/")
			.filter((part) => /v\d+/.test(part));
		const slugVersion = version && version.replaceAll(".", "");
		const slug = slugParts
			.map((part, index) => {
				if (part === langCode.toLowerCase()) {
					return langCode;
				}

				if (index < 2 && version && part === slugVersion) {
					return version;
				}

				return part;
			})
			.join("/");

		return {
			params: {
				slug,
			},
			props: {
				...entry,
				langCode,
				slug,
				version,
			},
		};
	}

	const mapped = docs.map(transform);
	return mapped;
}
type Props = CollectionEntry<"docs">;

const post = Astro.props;
const { Content, headings } = await post.render();
const { langCode, version } = post;
---

<MainLayout
	headings={headings}
	{...post.data}
	langCode={langCode}
	version={version}
>
	<Content />
</MainLayout>
